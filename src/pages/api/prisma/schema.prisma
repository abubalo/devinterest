datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
}

generator client {
    provider      = "prisma-client-js"
}

model User {
    id         String   @id @default(cuid())
    name       String   @db.VarChar(100)
    email      String   @unique @db.VarChar(100)
    bio        String
    gender     String   @db.VarChar(10)
    password   String   @db.VarChar(30)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    posts    Post[]
    messages Message[]
    Chats    Chat[]

    @@map("user")
}

model Post {
    id         String   @id @default(cuid())
    title      String   @db.VarChar(250)
    content    String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    author   User   @relation(fields: [authorId], references: [id])
    authorId String

    comments Comment[]
    tags     Tag[]     @relation("tags")

    @@map("post")
}

model Chat {
    id         String   @id @default(uuid())
    createdAt DateTime @default(now())

    messages Message[]

    user   User   @relation(fields: [userId], references: [id])
    userId String
    chatId String

    @@map("chat")
}

model Comment {
    id         String   @id @default(uuid())
    content    String
    createdAt DateTime @default(now())

    post   Post   @relation(fields: [postId], references: [id])
    postId String

    @@map("comment")
}

model Tag {
    id   Int @id @default(autoincrement())
    name String @unique @db.VarChar(15)

    posts Post[] @relation("tags")

    @@map("tag")
}

model Message {
    id         String   @id @default(uuid())
    content    String
    createdAt DateTime @default(now())

    author   User   @relation(fields: [authorId], references: [id])
    authorId String

    chat   Chat   @relation(fields: [chatId], references: [id])
    chatId String

    @@map("message")
}
